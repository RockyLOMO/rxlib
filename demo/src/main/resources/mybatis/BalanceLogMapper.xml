<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.rx.fl.repository.BalanceLogMapper">
  <select id="sumAmount" parameterType="org.rx.fl.repository.model.BalanceLogExample" resultType="java.lang.Long">
    select sum(value) from t_balance_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <resultMap id="BaseResultMap" type="org.rx.fl.repository.model.BalanceLog">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="user_id" jdbcType="CHAR" property="userId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="source" jdbcType="INTEGER" property="source" />
    <result column="source_id" jdbcType="VARCHAR" property="sourceId" />
    <result column="client_ip" jdbcType="VARCHAR" property="clientIp" />
    <result column="pre_balance" jdbcType="BIGINT" property="preBalance" />
    <result column="post_balance" jdbcType="BIGINT" property="postBalance" />
    <result column="value" jdbcType="BIGINT" property="value" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="version" jdbcType="BIGINT" property="version" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, type, source, source_id, client_ip, pre_balance, post_balance, value, 
    remark, version, create_time
  </sql>
  <select id="selectByExample" parameterType="org.rx.fl.repository.model.BalanceLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_balance_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_balance_log
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_balance_log
    where id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="org.rx.fl.repository.model.BalanceLogExample">
    delete from t_balance_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.rx.fl.repository.model.BalanceLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_balance_log (user_id, type, source, 
      source_id, client_ip, pre_balance, 
      post_balance, value, remark, 
      version, create_time)
    values (#{userId,jdbcType=CHAR}, #{type,jdbcType=INTEGER}, #{source,jdbcType=INTEGER}, 
      #{sourceId,jdbcType=VARCHAR}, #{clientIp,jdbcType=VARCHAR}, #{preBalance,jdbcType=BIGINT}, 
      #{postBalance,jdbcType=BIGINT}, #{value,jdbcType=BIGINT}, #{remark,jdbcType=VARCHAR}, 
      #{version,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.rx.fl.repository.model.BalanceLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_balance_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="sourceId != null">
        source_id,
      </if>
      <if test="clientIp != null">
        client_ip,
      </if>
      <if test="preBalance != null">
        pre_balance,
      </if>
      <if test="postBalance != null">
        post_balance,
      </if>
      <if test="value != null">
        value,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=CHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="source != null">
        #{source,jdbcType=INTEGER},
      </if>
      <if test="sourceId != null">
        #{sourceId,jdbcType=VARCHAR},
      </if>
      <if test="clientIp != null">
        #{clientIp,jdbcType=VARCHAR},
      </if>
      <if test="preBalance != null">
        #{preBalance,jdbcType=BIGINT},
      </if>
      <if test="postBalance != null">
        #{postBalance,jdbcType=BIGINT},
      </if>
      <if test="value != null">
        #{value,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.rx.fl.repository.model.BalanceLogExample" resultType="java.lang.Long">
    select count(*) from t_balance_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_balance_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=CHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.source != null">
        source = #{record.source,jdbcType=INTEGER},
      </if>
      <if test="record.sourceId != null">
        source_id = #{record.sourceId,jdbcType=VARCHAR},
      </if>
      <if test="record.clientIp != null">
        client_ip = #{record.clientIp,jdbcType=VARCHAR},
      </if>
      <if test="record.preBalance != null">
        pre_balance = #{record.preBalance,jdbcType=BIGINT},
      </if>
      <if test="record.postBalance != null">
        post_balance = #{record.postBalance,jdbcType=BIGINT},
      </if>
      <if test="record.value != null">
        value = #{record.value,jdbcType=BIGINT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_balance_log
    set id = #{record.id,jdbcType=CHAR},
      user_id = #{record.userId,jdbcType=CHAR},
      type = #{record.type,jdbcType=INTEGER},
      source = #{record.source,jdbcType=INTEGER},
      source_id = #{record.sourceId,jdbcType=VARCHAR},
      client_ip = #{record.clientIp,jdbcType=VARCHAR},
      pre_balance = #{record.preBalance,jdbcType=BIGINT},
      post_balance = #{record.postBalance,jdbcType=BIGINT},
      value = #{record.value,jdbcType=BIGINT},
      remark = #{record.remark,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.rx.fl.repository.model.BalanceLog">
    update t_balance_log
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=CHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=INTEGER},
      </if>
      <if test="sourceId != null">
        source_id = #{sourceId,jdbcType=VARCHAR},
      </if>
      <if test="clientIp != null">
        client_ip = #{clientIp,jdbcType=VARCHAR},
      </if>
      <if test="preBalance != null">
        pre_balance = #{preBalance,jdbcType=BIGINT},
      </if>
      <if test="postBalance != null">
        post_balance = #{postBalance,jdbcType=BIGINT},
      </if>
      <if test="value != null">
        value = #{value,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.rx.fl.repository.model.BalanceLog">
    update t_balance_log
    set user_id = #{userId,jdbcType=CHAR},
      type = #{type,jdbcType=INTEGER},
      source = #{source,jdbcType=INTEGER},
      source_id = #{sourceId,jdbcType=VARCHAR},
      client_ip = #{clientIp,jdbcType=VARCHAR},
      pre_balance = #{preBalance,jdbcType=BIGINT},
      post_balance = #{postBalance,jdbcType=BIGINT},
      value = #{value,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR},
      version = #{version,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>