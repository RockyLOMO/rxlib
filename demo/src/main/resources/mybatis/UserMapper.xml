<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.rx.fl.repository.UserMapper">
    <resultMap id="BaseResultMap" type="org.rx.fl.repository.model.User">
        <id column="id" jdbcType="CHAR" property="id"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
        <result column="wx_svc_open_id" jdbcType="VARCHAR" property="wxSvcOpenId"/>
        <result column="wx_open_id" jdbcType="VARCHAR" property="wxOpenId"/>
        <result column="alipay_name" jdbcType="VARCHAR" property="alipayName"/>
        <result column="alipay_account" jdbcType="VARCHAR" property="alipayAccount"/>
        <result column="balance" jdbcType="BIGINT" property="balance"/>
        <result column="freeze_amount" jdbcType="BIGINT" property="freezeAmount"/>
        <result column="version" jdbcType="BIGINT" property="version"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime"/>
        <result column="is_deleted" jdbcType="CHAR" property="isDeleted"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, nickname, wx_svc_open_id, wx_open_id, alipay_name, alipay_account, balance, freeze_amount, 
    version, create_time, modify_time, is_deleted
  </sql>
    <select id="selectByExample" parameterType="org.rx.fl.repository.model.UserExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
        <if test="forUpdate != null and forUpdate == true">
            for update
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_user
        where id = #{id,jdbcType=CHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_user
    where id = #{id,jdbcType=CHAR}
  </delete>
    <delete id="deleteByExample" parameterType="org.rx.fl.repository.model.UserExample">
        delete from t_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="org.rx.fl.repository.model.User"
            useGeneratedKeys="true">
    insert into t_user (id, nickname, wx_svc_open_id, wx_open_id,
      alipay_name, alipay_account, balance, 
      freeze_amount, version, create_time, 
      modify_time, is_deleted)
    values (#{id,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{wxSvcOpenId,jdbcType=VARCHAR}, #{wxOpenId,jdbcType=VARCHAR},
      #{alipayName,jdbcType=VARCHAR}, #{alipayAccount,jdbcType=VARCHAR}, #{balance,jdbcType=BIGINT}, 
      #{freezeAmount,jdbcType=BIGINT}, #{version,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=CHAR})
  </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="org.rx.fl.repository.model.User"
            useGeneratedKeys="true">
        insert into t_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="nickname != null">
                nickname,
            </if>
            <if test="wxSvcOpenId != null">
                wx_svc_open_id,
            </if>
            <if test="wxOpenId != null">
                wx_open_id,
            </if>
            <if test="alipayName != null">
                alipay_name,
            </if>
            <if test="alipayAccount != null">
                alipay_account,
            </if>
            <if test="balance != null">
                balance,
            </if>
            <if test="freezeAmount != null">
                freeze_amount,
            </if>
            <if test="version != null">
                version,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="modifyTime != null">
                modify_time,
            </if>
            <if test="isDeleted != null">
                is_deleted,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=CHAR},
            </if>
            <if test="nickname != null">
                #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="wxSvcOpenId != null">
                #{wxSvcOpenId,jdbcType=VARCHAR},
            </if>
            <if test="wxOpenId != null">
                #{wxOpenId,jdbcType=VARCHAR},
            </if>
            <if test="alipayName != null">
                #{alipayName,jdbcType=VARCHAR},
            </if>
            <if test="alipayAccount != null">
                #{alipayAccount,jdbcType=VARCHAR},
            </if>
            <if test="balance != null">
                #{balance,jdbcType=BIGINT},
            </if>
            <if test="freezeAmount != null">
                #{freezeAmount,jdbcType=BIGINT},
            </if>
            <if test="version != null">
                #{version,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDeleted != null">
                #{isDeleted,jdbcType=CHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="org.rx.fl.repository.model.UserExample" resultType="java.lang.Long">
        select count(*) from t_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_user
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=CHAR},
            </if>
            <if test="record.nickname != null">
                nickname = #{record.nickname,jdbcType=VARCHAR},
            </if>
            <if test="record.wxSvcOpenId != null">
                wx_svc_open_id = #{record.wxSvcOpenId,jdbcType=VARCHAR},
            </if>
            <if test="record.wxOpenId != null">
                wx_open_id = #{record.wxOpenId,jdbcType=VARCHAR},
            </if>
            <if test="record.alipayName != null">
                alipay_name = #{record.alipayName,jdbcType=VARCHAR},
            </if>
            <if test="record.alipayAccount != null">
                alipay_account = #{record.alipayAccount,jdbcType=VARCHAR},
            </if>
            <if test="record.balance != null">
                balance = #{record.balance,jdbcType=BIGINT},
            </if>
            <if test="record.freezeAmount != null">
                freeze_amount = #{record.freezeAmount,jdbcType=BIGINT},
            </if>
            <if test="record.version != null">
                version = #{record.version,jdbcType=BIGINT},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.modifyTime != null">
                modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.isDeleted != null">
                is_deleted = #{record.isDeleted,jdbcType=CHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_user
        set id = #{record.id,jdbcType=CHAR},
        nickname = #{record.nickname,jdbcType=VARCHAR},
        wx_svc_open_id = #{record.wxSvcOpenId,jdbcType=VARCHAR},
        wx_open_id = #{record.wxOpenId,jdbcType=VARCHAR},
        alipay_name = #{record.alipayName,jdbcType=VARCHAR},
        alipay_account = #{record.alipayAccount,jdbcType=VARCHAR},
        balance = #{record.balance,jdbcType=BIGINT},
        freeze_amount = #{record.freezeAmount,jdbcType=BIGINT},
        version = #{record.version,jdbcType=BIGINT},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
        is_deleted = #{record.isDeleted,jdbcType=CHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="org.rx.fl.repository.model.User">
        update t_user
        <set>
            <if test="nickname != null">
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="wxSvcOpenId != null">
                wx_svc_open_id = #{wxSvcOpenId,jdbcType=VARCHAR},
            </if>
            <if test="wxOpenId != null">
                wx_open_id = #{wxOpenId,jdbcType=VARCHAR},
            </if>
            <if test="alipayName != null">
                alipay_name = #{alipayName,jdbcType=VARCHAR},
            </if>
            <if test="alipayAccount != null">
                alipay_account = #{alipayAccount,jdbcType=VARCHAR},
            </if>
            <if test="balance != null">
                balance = #{balance,jdbcType=BIGINT},
            </if>
            <if test="freezeAmount != null">
                freeze_amount = #{freezeAmount,jdbcType=BIGINT},
            </if>
            <if test="version != null">
                version = #{version,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                modify_time = #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=CHAR},
            </if>
        </set>
        where id = #{id,jdbcType=CHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.rx.fl.repository.model.User">
    update t_user
    set nickname = #{nickname,jdbcType=VARCHAR},
      wx_svc_open_id = #{wxSvcOpenId,jdbcType=VARCHAR},
      wx_open_id = #{wxOpenId,jdbcType=VARCHAR},
      alipay_name = #{alipayName,jdbcType=VARCHAR},
      alipay_account = #{alipayAccount,jdbcType=VARCHAR},
      balance = #{balance,jdbcType=BIGINT},
      freeze_amount = #{freezeAmount,jdbcType=BIGINT},
      version = #{version,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=CHAR}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>
